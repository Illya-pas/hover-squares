{"version":3,"sources":["reportWebVitals.js","redux/types.js","redux/rootReducer.js","components/DropDown.js","redux/actions.js","components/SubmitButton.js","components/Square.js","components/Field.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHOW_ALERT","GET_CELLS","SHOW_TIP","initialState","cells","alerts","tip","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","position","marginLeft","DropDown","mode","setMode","classes","handleChange","event","a","target","value","className","root","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","FormHelperText","error","sleep","ms","Promise","resolve","setTimeout","button","height","SubmitButton","dispatch","useDispatch","Button","variant","color","onClick","fetch","response","json","count","Object","entries","find","cell","type","payload","field","getCells","square","border","width","active","Square","x","y","useState","isActive","setIsActive","onMouseEnter","data","clsx","display","flexWrap","Field","useSelector","state","setCells","useEffect","surface","index","push","style","map","justifyContent","app","header","alignItems","alert","right","App","left","Alert","severity","store","createStore","action","length","shift","concat","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae154fef.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SHOW_ALERT = \"SHOW_ALERT\"\nexport const GET_CELLS = \"GET_CELLS\"\nexport const SHOW_TIP = \"SHOW_TIP\"","import {SHOW_ALERT, GET_CELLS, SHOW_TIP} from \"./types\";\n\nconst initialState = {\n\tcells: 0,\n\talerts: [],\n\ttip: null\n}\n\nexport const rootReducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase GET_CELLS:\n\t\t\treturn {...state, cells: action.payload}\n\t\tcase SHOW_TIP:\n\t\t\treturn {...state, tip: action.payload}\n\t\tcase SHOW_ALERT:\n\t\t\t(state.alerts.length > 3) && state.alerts.shift()\n\t\t\treturn {...state, alerts: state.alerts.concat([action.payload])}\n\t\tdefault: return state\n\t}\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { FormHelperText } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  tip: {\n    position: \"absolute\",\n    marginLeft: 8\n  }\n}));\n\nexport default function DropDown({mode, setMode, tip}) {\n  const classes = useStyles();\n\n  const handleChange = async (event) => {\n    setMode(event.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Mode</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={mode}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"easyMode\">Easy</MenuItem>\n          <MenuItem value=\"normalMode\">Normal</MenuItem>\n          <MenuItem value=\"hardMode\">Hard</MenuItem>\n        </Select>\n      </FormControl>\n      {tip && <FormHelperText className={classes.tip} error>{tip}</FormHelperText>}\n    </div>\n  );\n}","import {GET_CELLS, SHOW_ALERT, SHOW_TIP} from \"./types\";\n\nexport const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nexport function getCells (mode) {\n\treturn async(dispatch) => {\n\t\ttry{\n\t\tconst response = await fetch(\"https://demo1030918.mockable.io/\")\n\t\tlet cells = await response.json()\n\t\tlet count = Object.entries(cells).find(cell => {\n\t\t\treturn cell[0] === mode\n\t\t})\n\n\t\tdispatch({type: GET_CELLS, payload: count[1].field})\n\t\t} catch (e) {\n\t\t\tdispatch({type: SHOW_TIP, payload: \"Field is reqired\"})\n\t\t\tawait sleep(3000)\n\t\t\tdispatch({type: SHOW_TIP, payload: null})\n\t\t}\n\t}\n}\n\nexport function showAlert (data) {\n\treturn async(dispatch) => {\n\t\tdispatch({type: SHOW_ALERT, payload: data})\n\t}\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useDispatch} from 'react-redux'\nimport {getCells} from \"../redux/actions.js\"\n\nconst useStyles = makeStyles({\n  button: {\n    height: \"fit-content\",\n    marginLeft: 20\n  }\n});\n\nexport default function SubmitButton({mode}) {\n\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n  return (\n\t\t<Button \n\t\tclassName={classes.button}\n\t\tvariant=\"contained\"\n\t\tcolor=\"primary\"\n\t\tonClick={() => dispatch(getCells(mode))}\n\t\t>\n\t\t  Start\n\t\t</Button>\n  );\n}","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {useDispatch} from 'react-redux'\nimport {showAlert} from \"../redux/actions.js\"\n\nconst useStyles = makeStyles({\n  square: {\n    border: \"1px solid black\",\n    height: 35,\n    width: 35,\n  },\n  active: {\n    \"background-color\": \"blue\",\n  }\n});\n\nexport default function Square({x, y}) {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n\n  const [isActive, setIsActive] = useState(false)\n\n  function handleAction () {\n    dispatch(showAlert(`row ${x+1} col ${y+1}`))\n    setIsActive(!isActive)\n  }\n\n  return (\n    <div\n    onMouseEnter={handleAction}\n    className={clsx(\n      classes.square,\n      isActive && classes.active\n    )}\n    >\n    </div>\n  );\n}","import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {useSelector} from 'react-redux'\nimport Square from \"./Square\"\n\nconst useStyles = makeStyles({\n  root: {\n  \tdisplay: \"flex\",\n  \tflexWrap: \"wrap\",\n  }\n});\n\nexport default function Field() {\n\n  const classes = useStyles();\n  const field = useSelector(state => state.cells)\n\n  const [cells, setCells] = useState([])\n\n  useEffect(() => {\n  \tconst surface = []\n  \tlet index = 0\n\n\t  for (let x=0; x<field; x++) {\n\t  \tfor (let y=0; y<field; y++) {\n\t  \t\t++index\n\t\t  \tsurface.push(<Square x={x} y={y} key={index}/>)\n\t\t  }\n\t  }\n\t  setCells(surface)\n\n  }, [field])\n\n  const getWidth = () => {\n  \treturn 37 * field\n  }\n\n  return (\n    <div \n    \tclassName={classes.root}\n    \tstyle={{width: getWidth()}}\n    >\n    \t{cells.map(cell => cell)}\n    </div>\n  );\n}","import {useState} from 'react';\nimport DropDown from \"./components/DropDown\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert';\nimport SubmitButton from \"./components/SubmitButton\"\nimport {useSelector} from 'react-redux'\nimport Field from \"./components/Field\"\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 40,\n  },\n  app: {\n    display: \"flex\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  alert: {\n    width: 200,\n    marginTop: 10\n  },\n  right: {\n    marginLeft: 40,\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [mode, setMode] = useState('');\n\n  const alerts = useSelector(state => state.alerts)\n  const tip = useSelector(state => state.tip)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.app}>\n        <div className={classes.left}>\n          <div className={classes.header}>\n            <DropDown tip={tip} mode = {mode} setMode={setMode}/>\n            <SubmitButton mode = {mode}/>\n          </div>\n          <Field />\n        </div>\n\n        <div className={classes.right}>\n          <h1>Hover squares:</h1>\n            {alerts.map((alert, index) => {\n              return <Alert className={classes.alert} key={index} severity=\"info\">{alert}</Alert>\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {compose, createStore,applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './redux/rootReducer';\nimport App from './App';\n\nconst store = createStore(rootReducer, compose(\n\tapplyMiddleware (\n\t\tthunk\n\t)\n))\n\nconst app = (\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n)\n\nReactDOM.render(app, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}